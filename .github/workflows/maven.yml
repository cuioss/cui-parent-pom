# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Maven-Build

on:
  push:
    branches: [ "master" ]
    paths-ignore:
      - 'README*'
  pull_request:
    branches: [ "master" ]
    paths-ignore:
      - 'README*'
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B verify --file pom.xml
      
  deploy-snapshot:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 11
      uses: actions/setup-java@v3
      with:
        java-version: '11'
        distribution: 'temurin'
        server-id: sonatype-nexus-snapshots
        server-username: MAVEN_USERNAME
        server-password: MAVEN_CENTRAL_TOKEN
        cache: maven

    - name: Extract project version
      id: project
      run: echo ::set-output name=version::$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)

    - name: Deploy Snapshot with Maven, version ${{ steps.project.outputs.version }}
      if: ${{endsWith(steps.project.outputs.version, '-SNAPSHOT')}}
      run: mvn -B deploy -Dmaven.test.skip=true -Dcui.bom.version=${{ steps.project.outputs.version }}
      env:
        MAVEN_USERNAME: ${{ secrets.OSS_SONATYPE_USERNAME }}
        MAVEN_CENTRAL_TOKEN: ${{ secrets.OSS_SONATYPE_PASSWORD }}    