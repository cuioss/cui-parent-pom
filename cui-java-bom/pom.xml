<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>io.github.cuioss</groupId>
        <artifactId>cui-parent-pom</artifactId>
        <version>0.0.5-SNAPSHOT</version>
        <relativePath>..</relativePath>
    </parent>
    <artifactId>cui-java-bom</artifactId>
    <packaging>pom</packaging>
    <name>cui java dependency management</name>
    <description>Provides a number of standard-java dependency-declarations that can be consumed directly</description>
    <properties>
        <version.lombok>1.18.24</version.lombok>
        <!-- Logging, need to be the same version as in repackaged-tomcat project! -->
        <version.slf4j>2.0.5</version.slf4j>
        <version.slog4j2>2.19.0</version.slog4j2>
        <!-- JSF -->
        <version.jakarta.faces-api>2.3.2</version.jakarta.faces-api>
        <version.myfaces.api>2.3.10</version.myfaces.api>
        <version.jsf.mojarra>2.3.18</version.jsf.mojarra>
        <version.jsf.omnifaces>3.14.1</version.jsf.omnifaces>
        <version.jsf.primefaces.>8.0</version.jsf.primefaces.>
        <!-- Servlet / EE api -->
        <version.jakarta.ee.web-api>8.0.0</version.jakarta.ee.web-api>
        <version.jakarta.el-api>3.0.3</version.jakarta.el-api>
        <version.jakarta.websocket-api>2.1.0</version.jakarta.websocket-api>
        <version.jakarta.servlet-api>4.0.4</version.jakarta.servlet-api>
        <version.jakarta.validation-api>2.0.2</version.jakarta.validation-api>
        <version.jakarta.interceptor-api>1.2.5</version.jakarta.interceptor-api>
        <version.jakarta.annotation-api>1.3.5</version.jakarta.annotation-api>
        <version.jakarta.inject-api>1.0.5</version.jakarta.inject-api>
        <version.jakarta.cdi-api>2.0.2</version.jakarta.cdi-api>
        <version.jakarta.ws.rs-api>2.1.6</version.jakarta.ws.rs-api>
        <version.jakarta.xml.bind-api>2.3.3</version.jakarta.xml.bind-api>
        <version.jakarta.json-api>1.1.6</version.jakarta.json-api>
        <!-- MicroProfiles (https://microprofile.io/) -->
        <microprofile.health.version>3.1</microprofile.health.version>
        <microprofile.health.impl.smallrye.version>3.3.1</microprofile.health.impl.smallrye.version>
        <microprofile.metrics.version>3.0.1</microprofile.metrics.version>
        <microprofile.metrics.impl.smallrye.version>3.0.5</microprofile.metrics.impl.smallrye.version>
        <microprofile.config.version>2.0.1</microprofile.config.version>
        <microprofile.config.impl.smallrye.version>2.13.0</microprofile.config.impl.smallrye.version>
        <microprofile.rest-client.version>2.0</microprofile.rest-client.version>
        <org.jboss.resteasy.client.version>4.7.7.Final</org.jboss.resteasy.client.version>
        <!-- Override transitive from REST Easy -->
        <jackson.version>2.14.1</jackson.version>
        <!--         EE-implementations -->
        <weld.version>3.1.9.Final</weld.version>
        <weld.junit5.version>2.0.2.Final</weld.junit5.version>
        <deltaspike.version>1.9.6</deltaspike.version>
        <version.owasp.encoder>1.2.3</version.owasp.encoder>
        <commons.io.version>2.11.0</commons.io.version>
        <findbugs.annotations.version>3.0.1u2</findbugs.annotations.version>
        <jdom2.version>2.0.6.1</jdom2.version>
        <jaxen.version>2.0.0</jaxen.version>
        <owasp.sanitizer.version>20220608.1</owasp.sanitizer.version>
        <prettytime.version>5.0.6.Final</prettytime.version>
        <caffeine.version>3.1.2</caffeine.version>
        <!-- Override transitive from owasp sanitizer -->
        <guava.version>31.1-jre</guava.version>
        <jandex.version>3.0.5</jandex.version>
        <apache.httpcore.version>4.4.16</apache.httpcore.version>
        <snakeyaml.version>1.33</snakeyaml.version>
        <javax.json.version>1.1.4</javax.json.version>
        <okhttp3.version>4.10.0</okhttp3.version>
        <javassist.version>3.29.2-GA</javassist.version>
        <!-- Test -->
        <easymock.version>5.0.1</easymock.version>
        <myfaces.test.23.version>1.0.8</myfaces.test.23.version>
        <version.junit.jupiter>5.9.1</version.junit.jupiter>
        <version.hamcrest>2.2</version.hamcrest>
    </properties>
    <dependencyManagement>
        <dependencies>
            <!-- Standard Third Parties -->
            <dependency>
                <groupId>org.projectlombok</groupId>
                <artifactId>lombok</artifactId>
                <version>${version.lombok}</version>
                <scope>provided</scope>
            </dependency>
            <!-- ############################# -->
            <!-- ####### 3rd party ########### -->
            <!-- ############################# -->
            <!-- Logging -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${version.slf4j}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>${version.slf4j}</version>
                <scope>provided</scope>
            </dependency>
            <!-- Simple implementation that is actually a bridge to juli logging -->
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-jdk14</artifactId>
                <version>${version.slf4j}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jul-to-slf4j</artifactId>
                <version>${version.slf4j}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>${version.slog4j2}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${version.slog4j2}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-jcl</artifactId>
                <version>${version.slog4j2}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-web</artifactId>
                <version>${version.slog4j2}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-slf4j2-impl</artifactId>
                <version>${version.slog4j2}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-jul</artifactId>
                <version>${version.slog4j2}</version>
                <scope>runtime</scope>
            </dependency>
            <!-- JSF -->
            <dependency>
                <groupId>javax.faces</groupId>
                <artifactId>javax.faces-api</artifactId>
                <version>use-jakarta-instead</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <!-- replaces javax.faces-api -->
                <groupId>jakarta.faces</groupId>
                <artifactId>jakarta.faces-api</artifactId>
                <version>${version.jakarta.faces-api}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.myfaces.core</groupId>
                <artifactId>myfaces-api</artifactId>
                <version>${version.myfaces.api}</version>
                <scope>provided</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.tomcat</groupId>
                        <artifactId>tomcat-websocket-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.geronimo.specs</groupId>
                        <artifactId>geronimo-atinject_1.0_spec</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.glassfish</groupId>
                <artifactId>jakarta.faces</artifactId>
                <version>${version.jsf.mojarra}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.primefaces</groupId>
                <artifactId>primefaces</artifactId>
                <version>${version.jsf.primefaces.}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>org.omnifaces</groupId>
                <artifactId>omnifaces</artifactId>
                <version>${version.jsf.omnifaces}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>javax</groupId>
                <artifactId>javaee-web-api</artifactId>
                <version>use-jakarta-instead</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <!-- replaces javax:javaee-web-api -->
                <groupId>jakarta.platform</groupId>
                <artifactId>jakarta.jakartaee-web-api</artifactId>
                <version>${version.jakarta.ee.web-api}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <!-- replaces javax.xml.bind:jaxb-api -->
                <groupId>jakarta.xml.bind</groupId>
                <artifactId>jakarta.xml.bind-api</artifactId>
                <version>${version.jakarta.xml.bind-api}</version>
            </dependency>
            <!-- Servlet / ee API -->
            <dependency>
                <groupId>javax.servlet</groupId>
                <artifactId>javax.servlet-api</artifactId>
                <version>use-jakarta-instead</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <!-- replaces javax.servlet-api -->
                <groupId>jakarta.servlet</groupId>
                <artifactId>jakarta.servlet-api</artifactId>
                <version>${version.jakarta.servlet-api}</version>
                <scope>provided</scope>
            </dependency>
            <!-- Provided in all tomcats > 7, Currently needed for Omnifaces dependency -->
            <dependency>
                <groupId>javax.websocket</groupId>
                <artifactId>javax.websocket-api</artifactId>
                <version>use-jakarta-instead</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <!-- replaces javax.websocket-api -->
                <groupId>jakarta.websocket</groupId>
                <artifactId>jakarta.websocket-api</artifactId>
                <version>${version.jakarta.websocket-api}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>javax.validation</groupId>
                <artifactId>validation-api</artifactId>
                <version>use-jakarta-instead</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <!-- replaces javax.validation:validation-api -->
                <groupId>jakarta.validation</groupId>
                <artifactId>jakarta.validation-api</artifactId>
                <version>${version.jakarta.validation-api}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>javax.el</groupId>
                <artifactId>javax.el-api</artifactId>
                <version>use-jakarta-instead</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <!-- replaces javax.el:javax.el-api -->
                <groupId>jakarta.el</groupId>
                <artifactId>jakarta.el-api</artifactId>
                <version>${version.jakarta.el-api}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>javax.interceptor</groupId>
                <artifactId>javax.interceptor-api</artifactId>
                <version>use-jakarta-instead</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <!-- replaces javax.interceptor:javax.interceptor-api -->
                <groupId>jakarta.interceptor</groupId>
                <artifactId>jakarta.interceptor-api</artifactId>
                <version>${version.jakarta.interceptor-api}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>javax.annotation</groupId>
                <artifactId>javax.annotation-api</artifactId>
                <version>use-jakarta-instead</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <!-- replaces javax.annotation:javax.annotation-api -->
                <groupId>jakarta.annotation</groupId>
                <artifactId>jakarta.annotation-api</artifactId>
                <version>${version.jakarta.annotation-api}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>javax.json</groupId>
                <artifactId>javax.json-api</artifactId>
                <version>use-jakarta-instead</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <!-- replaces javax.json:javax.json-api -->
                <groupId>jakarta.json</groupId>
                <artifactId>jakarta.json-api</artifactId>
                <version>${version.jakarta.json-api}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <!-- json-api Impl -->
                <groupId>org.glassfish</groupId>
                <artifactId>javax.json</artifactId>
                <version>${javax.json.version}</version>
            </dependency>
            <!-- CDI / @inject -->
            <dependency>
                <groupId>javax.inject</groupId>
                <artifactId>javax.inject</artifactId>
                <version>use-jakarta-instead</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <!-- replaces javax.inject:javax.inject -->
                <groupId>jakarta.inject</groupId>
                <artifactId>jakarta.inject-api</artifactId>
                <version>${version.jakarta.inject-api}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>javax.enterprise</groupId>
                <artifactId>cdi-api</artifactId>
                <version>use-jakarta-instead</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <!-- replaces javax.enterprise:cdi-api -->
                <groupId>jakarta.enterprise</groupId>
                <artifactId>jakarta.enterprise.cdi-api</artifactId>
                <version>${version.jakarta.cdi-api}</version>
                <scope>provided</scope>
            </dependency>
            <!-- Weld -->
            <!-- The actual shaded runtime for tomcat deployments -->
            <dependency>
                <groupId>org.jboss.weld.servlet</groupId>
                <artifactId>weld-servlet-shaded</artifactId>
                <version>${weld.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.weld.module</groupId>
                <artifactId>weld-web</artifactId>
                <version>${weld.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- Need for the unit-integration tests -->
            <dependency>
                <groupId>org.jboss.weld.servlet</groupId>
                <artifactId>weld-servlet-core</artifactId>
                <version>${weld.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <artifactId>jboss-el-api_3.0_spec</artifactId>
                        <groupId>org.jboss.spec.javax.el</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.jboss.weld.se</groupId>
                <artifactId>weld-se-core</artifactId>
                <version>${weld.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- MicroProfile Health -->
            <dependency>
                <groupId>org.eclipse.microprofile.health</groupId>
                <artifactId>microprofile-health-api</artifactId>
                <version>${microprofile.health.version}</version>
                <scope>compile</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.osgi</groupId>
                        <artifactId>org.osgi.annotation.versioning</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>io.smallrye</groupId>
                <artifactId>smallrye-health</artifactId>
                <version>${microprofile.health.impl.smallrye.version}</version>
                <scope>runtime</scope>
            </dependency>
            <!-- MicroProfile Metrics -->
            <dependency>
                <groupId>org.eclipse.microprofile.metrics</groupId>
                <artifactId>microprofile-metrics-api</artifactId>
                <version>${microprofile.metrics.version}</version>
                <scope>compile</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.osgi</groupId>
                        <artifactId>org.osgi.annotation.versioning</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>io.smallrye</groupId>
                <artifactId>smallrye-metrics</artifactId>
                <version>${microprofile.metrics.impl.smallrye.version}</version>
                <scope>runtime</scope>
            </dependency>
            <!-- MicroProfile Config -->
            <dependency>
                <groupId>org.eclipse.microprofile.config</groupId>
                <artifactId>microprofile-config-api</artifactId>
                <version>${microprofile.config.version}</version>
                <scope>compile</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.osgi</groupId>
                        <artifactId>org.osgi.annotation.versioning</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>io.smallrye.config</groupId>
                <artifactId>smallrye-config</artifactId>
                <version>${microprofile.config.impl.smallrye.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <!-- The "core" does not contain CDI bits -->
                <groupId>io.smallrye.config</groupId>
                <artifactId>smallrye-config-core</artifactId>
                <version>${microprofile.config.impl.smallrye.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>io.smallrye.config</groupId>
                <artifactId>smallrye-config-source-injection</artifactId>
                <version>${microprofile.config.impl.smallrye.version}</version>
                <scope>runtime</scope>
            </dependency>
            <!-- MicroProfile REST Client -->
            <dependency>
                <groupId>org.eclipse.microprofile.rest.client</groupId>
                <artifactId>microprofile-rest-client-api</artifactId>
                <version>${microprofile.rest-client.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-bom</artifactId>
                <version>${org.jboss.resteasy.client.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-jaxb-provider</artifactId>
                <version>${org.jboss.resteasy.client.version}</version>
                <scope>runtime</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.jvnet.staxex</groupId>
                        <artifactId>stax-ex</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-client</artifactId>
                <version>${org.jboss.resteasy.client.version}</version>
                <scope>runtime</scope>
                <exclusions>
                    <exclusion>
                        <groupId>io.smallrye.config</groupId>
                        <artifactId>smallrye-config</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-client-microprofile</artifactId>
                <version>${org.jboss.resteasy.client.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.resteasy</groupId>
                <artifactId>resteasy-cdi</artifactId>
                <version>${org.jboss.resteasy.client.version}</version>
                <scope>runtime</scope>
            </dependency>
            <!-- Third Party libs -->
            <dependency>
                <groupId>com.googlecode.owasp-java-html-sanitizer</groupId>
                <artifactId>owasp-java-html-sanitizer</artifactId>
                <version>${owasp.sanitizer.version}</version>
                <!-- Taming guava transitives -->
                <exclusions>
                    <exclusion>
                        <groupId>org.checkerframework</groupId>
                        <artifactId>checker-qual</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>animal-sniffer-annotations</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.google.j2objc</groupId>
                        <artifactId>j2objc-annotations</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.google.code.findbugs</groupId>
                        <artifactId>jsr305</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.google.errorprone</groupId>
                        <artifactId>error_prone_annotations</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>com.fasterxml.jackson</groupId>
                <artifactId>jackson-bom</artifactId>
                <version>${jackson.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <dependency>
                <groupId>com.github.ben-manes.caffeine</groupId>
                <artifactId>caffeine</artifactId>
                <version>${caffeine.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.checkerframework</groupId>
                        <artifactId>checker-qual</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.google.errorprone</groupId>
                        <artifactId>error_prone_annotations</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.google.code.findbugs</groupId>
                <artifactId>annotations</artifactId>
                <version>${findbugs.annotations.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ocpsoft.prettytime</groupId>
                <artifactId>prettytime</artifactId>
                <scope>compile</scope>
                <version>${prettytime.version}</version>
            </dependency>
            <!-- Used by weld to speed up start up, see https://github.com/wildfly/jandex -->
            <dependency>
                <groupId>io.smallrye</groupId>
                <artifactId>jandex</artifactId>
                <version>${jandex.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.jboss.weld</groupId>
                <artifactId>weld-junit5</artifactId>
                <version>${weld.junit5.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.hibernate.javax.persistence</groupId>
                        <artifactId>hibernate-jpa-2.1-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.jboss.weld.probe</groupId>
                        <artifactId>weld-probe-core</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- Apache Deltaspike -->
            <dependency>
                <groupId>org.apache.deltaspike.core</groupId>
                <artifactId>deltaspike-core-api</artifactId>
                <version>${deltaspike.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.deltaspike.core</groupId>
                <artifactId>deltaspike-core-impl</artifactId>
                <version>${deltaspike.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.deltaspike.modules</groupId>
                <artifactId>deltaspike-jsf-module-api</artifactId>
                <version>${deltaspike.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.deltaspike.modules</groupId>
                <artifactId>deltaspike-jsf-module-impl</artifactId>
                <version>${deltaspike.version}</version>
                <scope>runtime</scope>
            </dependency>
            <!-- Used for jsf-module -->
            <dependency>
                <groupId>org.owasp.encoder</groupId>
                <artifactId>encoder</artifactId>
                <version>${version.owasp.encoder}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.deltaspike.modules</groupId>
                <artifactId>deltaspike-servlet-module-api</artifactId>
                <version>${deltaspike.version}</version>
                <scope>compile</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.deltaspike.modules</groupId>
                <artifactId>deltaspike-servlet-module-impl</artifactId>
                <version>${deltaspike.version}</version>
                <scope>runtime</scope>
            </dependency>
            <!-- Partial Bean -->
            <dependency>
                <groupId>org.apache.deltaspike.modules</groupId>
                <artifactId>deltaspike-partial-bean-module-api</artifactId>
                <version>${deltaspike.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.deltaspike.modules</groupId>
                <artifactId>deltaspike-partial-bean-module-impl</artifactId>
                <version>${deltaspike.version}</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>org.yaml</groupId>
                <artifactId>snakeyaml</artifactId>
                <version>${snakeyaml.version}</version>
                <scope>compile</scope>
            </dependency>
            <!-- Testing -->
            <!-- Junit 5 -->
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter</artifactId>
                <version>${version.junit.jupiter}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-api</artifactId>
                <version>${version.junit.jupiter}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-engine</artifactId>
                <version>${version.junit.jupiter}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-params</artifactId>
                <version>${version.junit.jupiter}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.jupiter</groupId>
                <artifactId>junit-jupiter-migrationsupport</artifactId>
                <version>${version.junit.jupiter}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.junit.vintage</groupId>
                <artifactId>junit-vintage-engine</artifactId>
                <version>${version.junit.jupiter}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-core</artifactId>
                <version>${version.hamcrest}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-library</artifactId>
                <version>${version.hamcrest}</version>
                <scope>test</scope>
            </dependency>
            <!--easymock -->
            <dependency>
                <groupId>org.easymock</groupId>
                <artifactId>easymock</artifactId>
                <version>${easymock.version}</version>
                <scope>test</scope>
            </dependency>
            <!-- JSF-Unit testing -->
            <dependency>
                <groupId>org.apache.myfaces.test</groupId>
                <artifactId>myfaces-test23</artifactId>
                <version>${myfaces.test.23.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>mockwebserver</artifactId>
                <version>${okhttp3.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>com.squareup.okhttp3</groupId>
                <artifactId>okhttp-tls</artifactId>
                <version>${okhttp3.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>
    <modules>
        <module>cui-modules-bom</module>
    </modules>
</project>
